###### This is not a ready-to-use sh file please don't run this directly. 

# Install cuda, cuDNN, nvidia-driver
# Ubuntu setup by running the following commands.
sudo apt-get update
sudo apt-get upgrade -y
sudo apt-get install -y build-essential cmake unzip pkg-config
sudo apt-get install -y libxmu-dev libxi-dev libglu1-mesa libglu1-mesa-dev
sudo apt-get install -y libjpeg-dev libpng-dev libtiff-dev
sudo apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt-get install -y libxvidcore-dev libx264-dev
sudo apt-get install -y libgtk-3-dev
sudo apt-get install -y libopenblas-dev libatlas-base-dev liblapack-dev gfortran
sudo apt-get install -y libhdf5-serial-dev graphviz
sudo apt-get install -y python3-dev python3-tk python-imaging-tk
sudo apt-get install -y linux-image-generic linux-image-extra-virtual
sudo apt-get install -y linux-source linux-headers-generic

# Remove existing Nvidia drivers if any
sudo apt-get purge nvidia*

# Add Graphic Drivers PPA
sudo add-apt-repository ppa:graphics-drivers/ppa
sudo apt-get update

# Search available drivers
sudo apt install ubuntu-drivers-common
ubuntu-drivers devices

# Install the driver with the best version
sudo apt-get install nvidia-driver-470

# rebooot now
sudo reboot now

# Verification
nvidia-smi

# install cuda 11.4 / download from drive
# https://drive.google.com/file/d/1COWU6rp93msz6-PoiZRuxZyvdFdIS2jw/view?usp=sharing
sudo sh cuda_11.2.2_460.32.03_linux.run

# add cuda related setting to .bashrc file
# Nvidia related setting (edit on .bashrc)
export PATH=/usr/local/cuda-11.4/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-11.4/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
export CUDA_HOME=/usr/local/cuda


# download and extract cudnn file 
# https://drive.google.com/file/d/1XziyV1z0jpN-TNzLmdX8oV1wFUs8apaf/view?usp=sharing
tar -zvxf cudnn-11.4-linux-x64-v8.2.4.15.tgz 

# for cudnn (edit on .bashrc)
export PATH=/usr/local/cuda-11.4/bin:/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda-11.4/lib64:/usr/local/cuda/lib64:/usr/local/cuda/lib:$LD_LIBRARY_PATH

# for saving the changes on .bashrc file
source .bashrc


# reboot system now
sudo reboot now


# copy the head files to the CUDA folder.
sudo cp cuda/include/cudnn*.h /usr/local/cuda/include

# Finally, reset the read and write permissions of the cudnn.h file.
sudo chmod a+r /usr/local/cuda/include/cudnn.h

# enter following cmds for verify 
nvidia-smi
nvcc -V
# result
# nvcc: NVIDIA (R) Cuda compiler driver
# Copyright (c) 2005-2021 NVIDIA Corporation
# Built on Wed_Jun__2_19:15:15_PDT_2021
# Cuda compilation tools, release 11.4, V11.4.48

# after install remove this file manually
#/etc/apt/sources.list.d$ 
graphics-drivers-ubuntu-ppa-bionic.list 
graphics-drivers-ubuntu-ppa-bionic.list.save
# or later it will issue driver miss match.


# install google protobuf 3.0.2
sudo apt-get install autoconf automake libtool curl make g++ unzip build-essential -y
git clone https://github.com/protocolbuffers/protobuf/tree/3.0.x
cd protobuf/
git submodule update --init --recursive
./autogen.sh
./configure
make
make check
sudo make install
sudo ldconfig


# Install cmake-3.15.6
wget https://github.com/Kitware/CMake/releases/download/v3.15.6/cmake-3.15.6.tar.gz
tar -zxvf cmake-3.15.6.tar.gz
cd cmake-3.15.6
./bootstrap
make -j`proc`
sudo make install -j`nproc`


# Install caffe-openpose
git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose
cd openpose/
sudo bash ./scripts/ubuntu/install_deps.sh
sudo apt-get install libopencv-dev

cd 3rdparty/
git clone https://github.com/CMU-Perceptual-Computing-Lab/caffe.git
git clone https://github.com/pybind/pybind11

# change cuDNN path CMakeLists.txt else off cuDNN

# check protoc version makesure it has a single installation else add protoc path to bashrc like this
# alias protoc=/usr/local/bin/protoc  /home/bigthinx/.bashrc

cd ..
mkdir build/
cd build/
cmake -DBUILD_PYTHON ON ..
make -j`nproc`

# verify openpose pthon installation 
cd
cd /openpose/build/examples/tutorial_api_python/
python3 04_keypoints_from_images.py

# copy existing scripts from 13.65.147.169:/home/bigthinx/body_measurements-for-lyfsize

# Install nvidia-docker2

sudo apt-get update
sudo apt-get install -y nvidia-docker2
sudo systemctl restart docker

# check installation
sudo docker run --rm --gpus all nvidia/cuda:11.0-base nvidia-smi
sudo docker images

# install bodymeasurement deps on ubuntu kernel; don't create any virtual enviroments
pip3 install -r requirements.txt

# install gunicorn (https://docs.gunicorn.org/en/stable/install.html#debian-gnu-linux)
sudo apt-get update
sudo apt-get install gunicorn3
